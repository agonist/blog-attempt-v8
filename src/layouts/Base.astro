---
import type { SiteMeta } from "@/data/siteMeta";
import BaseHead from "@/components/BaseHead";
import Header from "@/components/layout/Header";
import Footer from "@/components/layout/Footer";
import SkipLink from "@/components/SkipLink";
import { siteConfig } from "@/site-config";

interface Props {
	meta: SiteMeta;
}

const {
	meta: { title, description = siteConfig.description, ogImage, articleDate },
} = Astro.props;
---

<html lang={siteConfig.lang}>
	<head>
		<BaseHead title={title} description={description} ogImage={ogImage} articleDate={articleDate} />
		<script define:vars={{ siteConfig }}>
			const root = document.documentElement;
			const colorThemeMetaTag = document.querySelector("meta[name='theme-color']");

			// get user preference of dark mode, 1st local storage, 2nd browser
			function getThemePreference() {
				return "dark";
			}

			const isDark = getThemePreference() === "dark";

			// watch document element class attribute and update user preference when it changes.
			const observer = new MutationObserver(() => {
				const rootIsDark = root.classList.contains("dark");
				// set the meta attribute
				colorThemeMetaTag.setAttribute("content", siteConfig["themeColorDark"]);
				// store user preference
				if (typeof localStorage !== "undefined") {
					localStorage.setItem("theme", "dark");
				}
			});
			observer.observe(root, { attributeFilter: ["class"] });

			// initailse root class attribute
			root.classList.toggle("dark", isDark);
		</script>
		<script defer data-domain="whenmoon.xyz" src="https://plausible.io/js/script.js"></script>
	</head>
	<body>
		<SkipLink />
		<Header />
		<main id="main" class="flex-1">
			<slot />
		</main>
		<Footer />
	</body>
</html>
